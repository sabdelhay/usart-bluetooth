
usart_dirver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000055e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000005b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000005b2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001158  00000000  00000000  00000728  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008c6  00000000  00000000  00001880  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009b7  00000000  00000000  00002146  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c8  00000000  00000000  00002b00  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004fb  00000000  00000000  00002cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000bd4  00000000  00000000  000031c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  00003d97  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
   8:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
   c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  10:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  14:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  18:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  1c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  20:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  24:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  28:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  2c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  30:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  34:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  38:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  3c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  40:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  44:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  48:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  4c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  50:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  54:	8a 00       	.word	0x008a	; ????
  56:	a3 00       	.word	0x00a3	; ????
  58:	bc 00       	.word	0x00bc	; ????
  5a:	d5 00       	.word	0x00d5	; ????
  5c:	ed 00       	.word	0x00ed	; ????
  5e:	ed 00       	.word	0x00ed	; ????
  60:	ed 00       	.word	0x00ed	; ????
  62:	ed 00       	.word	0x00ed	; ????
  64:	ed 00       	.word	0x00ed	; ????
  66:	ed 00       	.word	0x00ed	; ????
  68:	ed 00       	.word	0x00ed	; ????
  6a:	ed 00       	.word	0x00ed	; ????
  6c:	ed 00       	.word	0x00ed	; ????
  6e:	ed 00       	.word	0x00ed	; ????
  70:	ed 00       	.word	0x00ed	; ????
  72:	ed 00       	.word	0x00ed	; ????
  74:	ed 00       	.word	0x00ed	; ????
  76:	ed 00       	.word	0x00ed	; ????
  78:	ed 00       	.word	0x00ed	; ????
  7a:	ed 00       	.word	0x00ed	; ????
  7c:	ed 00       	.word	0x00ed	; ????
  7e:	ed 00       	.word	0x00ed	; ????
  80:	ed 00       	.word	0x00ed	; ????
  82:	ed 00       	.word	0x00ed	; ????
  84:	ed 00       	.word	0x00ed	; ????
  86:	ed 00       	.word	0x00ed	; ????
  88:	ed 00       	.word	0x00ed	; ????
  8a:	ed 00       	.word	0x00ed	; ????
  8c:	ed 00       	.word	0x00ed	; ????
  8e:	ed 00       	.word	0x00ed	; ????
  90:	ed 00       	.word	0x00ed	; ????
  92:	ed 00       	.word	0x00ed	; ????
  94:	8a 00       	.word	0x008a	; ????
  96:	a3 00       	.word	0x00a3	; ????
  98:	bc 00       	.word	0x00bc	; ????
  9a:	d5 00       	.word	0x00d5	; ????
  9c:	fa 00       	.word	0x00fa	; ????
  9e:	13 01       	movw	r2, r6
  a0:	2c 01       	movw	r4, r24
  a2:	45 01       	movw	r8, r10
  a4:	5d 01       	movw	r10, r26
  a6:	5d 01       	movw	r10, r26
  a8:	5d 01       	movw	r10, r26
  aa:	5d 01       	movw	r10, r26
  ac:	5d 01       	movw	r10, r26
  ae:	5d 01       	movw	r10, r26
  b0:	5d 01       	movw	r10, r26
  b2:	5d 01       	movw	r10, r26
  b4:	5d 01       	movw	r10, r26
  b6:	5d 01       	movw	r10, r26
  b8:	5d 01       	movw	r10, r26
  ba:	5d 01       	movw	r10, r26
  bc:	5d 01       	movw	r10, r26
  be:	5d 01       	movw	r10, r26
  c0:	5d 01       	movw	r10, r26
  c2:	5d 01       	movw	r10, r26
  c4:	5d 01       	movw	r10, r26
  c6:	5d 01       	movw	r10, r26
  c8:	5d 01       	movw	r10, r26
  ca:	5d 01       	movw	r10, r26
  cc:	5d 01       	movw	r10, r26
  ce:	5d 01       	movw	r10, r26
  d0:	5d 01       	movw	r10, r26
  d2:	5d 01       	movw	r10, r26
  d4:	5d 01       	movw	r10, r26
  d6:	5d 01       	movw	r10, r26
  d8:	5d 01       	movw	r10, r26
  da:	5d 01       	movw	r10, r26
  dc:	fa 00       	.word	0x00fa	; ????
  de:	13 01       	movw	r2, r6
  e0:	2c 01       	movw	r4, r24
  e2:	45 01       	movw	r8, r10

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf e5       	ldi	r28, 0x5F	; 95
  ea:	d8 e0       	ldi	r29, 0x08	; 8
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	0e 94 4f 02 	call	0x49e	; 0x49e <main>
  f4:	0c 94 ad 02 	jmp	0x55a	; 0x55a <_exit>

000000f8 <__bad_interrupt>:
  f8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fc <DIO_setpindir>:
		 PORTC&=0xf0;
		 PORTC|=val;
		 break;
		 case 'D':
		 PORTD&=0xf0;
		 PORTD|=val;
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	fc 01       	movw	r30, r24
 100:	e1 54       	subi	r30, 0x41	; 65
 102:	f1 09       	sbc	r31, r1
 104:	e4 32       	cpi	r30, 0x24	; 36
 106:	f1 05       	cpc	r31, r1
 108:	08 f0       	brcs	.+2      	; 0x10c <DIO_setpindir+0x10>
 10a:	67 c0       	rjmp	.+206    	; 0x1da <DIO_setpindir+0xde>
 10c:	e6 5d       	subi	r30, 0xD6	; 214
 10e:	ff 4f       	sbci	r31, 0xFF	; 255
 110:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__tablejump2__>
 114:	41 30       	cpi	r20, 0x01	; 1
 116:	59 f4       	brne	.+22     	; 0x12e <DIO_setpindir+0x32>
 118:	2a b3       	in	r18, 0x1a	; 26
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_setpindir+0x28>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_setpindir+0x24>
 128:	82 2b       	or	r24, r18
 12a:	8a bb       	out	0x1a, r24	; 26
 12c:	08 95       	ret
 12e:	2a b3       	in	r18, 0x1a	; 26
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_setpindir+0x3e>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_setpindir+0x3a>
 13e:	80 95       	com	r24
 140:	82 23       	and	r24, r18
 142:	8a bb       	out	0x1a, r24	; 26
 144:	08 95       	ret
 146:	41 30       	cpi	r20, 0x01	; 1
 148:	59 f4       	brne	.+22     	; 0x160 <DIO_setpindir+0x64>
 14a:	27 b3       	in	r18, 0x17	; 23
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_setpindir+0x5a>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_setpindir+0x56>
 15a:	82 2b       	or	r24, r18
 15c:	87 bb       	out	0x17, r24	; 23
 15e:	08 95       	ret
 160:	27 b3       	in	r18, 0x17	; 23
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_setpindir+0x70>
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_setpindir+0x6c>
 170:	80 95       	com	r24
 172:	82 23       	and	r24, r18
 174:	87 bb       	out	0x17, r24	; 23
 176:	08 95       	ret
 178:	41 30       	cpi	r20, 0x01	; 1
 17a:	59 f4       	brne	.+22     	; 0x192 <DIO_setpindir+0x96>
 17c:	24 b3       	in	r18, 0x14	; 20
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	02 c0       	rjmp	.+4      	; 0x188 <DIO_setpindir+0x8c>
 184:	88 0f       	add	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	6a 95       	dec	r22
 18a:	e2 f7       	brpl	.-8      	; 0x184 <DIO_setpindir+0x88>
 18c:	82 2b       	or	r24, r18
 18e:	84 bb       	out	0x14, r24	; 20
 190:	08 95       	ret
 192:	24 b3       	in	r18, 0x14	; 20
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	02 c0       	rjmp	.+4      	; 0x19e <DIO_setpindir+0xa2>
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	6a 95       	dec	r22
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <DIO_setpindir+0x9e>
 1a2:	80 95       	com	r24
 1a4:	82 23       	and	r24, r18
 1a6:	84 bb       	out	0x14, r24	; 20
 1a8:	08 95       	ret
 1aa:	41 30       	cpi	r20, 0x01	; 1
 1ac:	59 f4       	brne	.+22     	; 0x1c4 <DIO_setpindir+0xc8>
 1ae:	21 b3       	in	r18, 0x11	; 17
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_setpindir+0xbe>
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	6a 95       	dec	r22
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_setpindir+0xba>
 1be:	82 2b       	or	r24, r18
 1c0:	81 bb       	out	0x11, r24	; 17
 1c2:	08 95       	ret
 1c4:	21 b3       	in	r18, 0x11	; 17
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_setpindir+0xd4>
 1cc:	88 0f       	add	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	6a 95       	dec	r22
 1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_setpindir+0xd0>
 1d4:	80 95       	com	r24
 1d6:	82 23       	and	r24, r18
 1d8:	81 bb       	out	0x11, r24	; 17
 1da:	08 95       	ret

000001dc <DIO_write>:
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	fc 01       	movw	r30, r24
 1e0:	e1 54       	subi	r30, 0x41	; 65
 1e2:	f1 09       	sbc	r31, r1
 1e4:	e4 32       	cpi	r30, 0x24	; 36
 1e6:	f1 05       	cpc	r31, r1
 1e8:	08 f0       	brcs	.+2      	; 0x1ec <DIO_write+0x10>
 1ea:	67 c0       	rjmp	.+206    	; 0x2ba <DIO_write+0xde>
 1ec:	e2 5b       	subi	r30, 0xB2	; 178
 1ee:	ff 4f       	sbci	r31, 0xFF	; 255
 1f0:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__tablejump2__>
 1f4:	41 30       	cpi	r20, 0x01	; 1
 1f6:	59 f4       	brne	.+22     	; 0x20e <DIO_write+0x32>
 1f8:	2b b3       	in	r18, 0x1b	; 27
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_write+0x28>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_write+0x24>
 208:	82 2b       	or	r24, r18
 20a:	8b bb       	out	0x1b, r24	; 27
 20c:	08 95       	ret
 20e:	2b b3       	in	r18, 0x1b	; 27
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	02 c0       	rjmp	.+4      	; 0x21a <DIO_write+0x3e>
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	6a 95       	dec	r22
 21c:	e2 f7       	brpl	.-8      	; 0x216 <DIO_write+0x3a>
 21e:	80 95       	com	r24
 220:	82 23       	and	r24, r18
 222:	8b bb       	out	0x1b, r24	; 27
 224:	08 95       	ret
 226:	41 30       	cpi	r20, 0x01	; 1
 228:	59 f4       	brne	.+22     	; 0x240 <DIO_write+0x64>
 22a:	28 b3       	in	r18, 0x18	; 24
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_write+0x5a>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_write+0x56>
 23a:	82 2b       	or	r24, r18
 23c:	88 bb       	out	0x18, r24	; 24
 23e:	08 95       	ret
 240:	28 b3       	in	r18, 0x18	; 24
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_write+0x70>
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	6a 95       	dec	r22
 24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_write+0x6c>
 250:	80 95       	com	r24
 252:	82 23       	and	r24, r18
 254:	88 bb       	out	0x18, r24	; 24
 256:	08 95       	ret
 258:	41 30       	cpi	r20, 0x01	; 1
 25a:	59 f4       	brne	.+22     	; 0x272 <DIO_write+0x96>
 25c:	25 b3       	in	r18, 0x15	; 21
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	02 c0       	rjmp	.+4      	; 0x268 <DIO_write+0x8c>
 264:	88 0f       	add	r24, r24
 266:	99 1f       	adc	r25, r25
 268:	6a 95       	dec	r22
 26a:	e2 f7       	brpl	.-8      	; 0x264 <DIO_write+0x88>
 26c:	82 2b       	or	r24, r18
 26e:	85 bb       	out	0x15, r24	; 21
 270:	08 95       	ret
 272:	25 b3       	in	r18, 0x15	; 21
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	02 c0       	rjmp	.+4      	; 0x27e <DIO_write+0xa2>
 27a:	88 0f       	add	r24, r24
 27c:	99 1f       	adc	r25, r25
 27e:	6a 95       	dec	r22
 280:	e2 f7       	brpl	.-8      	; 0x27a <DIO_write+0x9e>
 282:	80 95       	com	r24
 284:	82 23       	and	r24, r18
 286:	85 bb       	out	0x15, r24	; 21
 288:	08 95       	ret
 28a:	41 30       	cpi	r20, 0x01	; 1
 28c:	59 f4       	brne	.+22     	; 0x2a4 <DIO_write+0xc8>
 28e:	22 b3       	in	r18, 0x12	; 18
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	02 c0       	rjmp	.+4      	; 0x29a <DIO_write+0xbe>
 296:	88 0f       	add	r24, r24
 298:	99 1f       	adc	r25, r25
 29a:	6a 95       	dec	r22
 29c:	e2 f7       	brpl	.-8      	; 0x296 <DIO_write+0xba>
 29e:	82 2b       	or	r24, r18
 2a0:	82 bb       	out	0x12, r24	; 18
 2a2:	08 95       	ret
 2a4:	22 b3       	in	r18, 0x12	; 18
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <DIO_write+0xd4>
 2ac:	88 0f       	add	r24, r24
 2ae:	99 1f       	adc	r25, r25
 2b0:	6a 95       	dec	r22
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <DIO_write+0xd0>
 2b4:	80 95       	com	r24
 2b6:	82 23       	and	r24, r18
 2b8:	82 bb       	out	0x12, r24	; 18
 2ba:	08 95       	ret

000002bc <DIO_write_high_nibble>:
		 break;
	 }
}
void DIO_write_high_nibble(char port,char val)
	{
		val<<=4;
 2bc:	62 95       	swap	r22
 2be:	60 7f       	andi	r22, 0xF0	; 240
		switch(port)
 2c0:	82 34       	cpi	r24, 0x42	; 66
 2c2:	81 f0       	breq	.+32     	; 0x2e4 <DIO_write_high_nibble+0x28>
 2c4:	18 f4       	brcc	.+6      	; 0x2cc <DIO_write_high_nibble+0x10>
 2c6:	81 34       	cpi	r24, 0x41	; 65
 2c8:	31 f0       	breq	.+12     	; 0x2d6 <DIO_write_high_nibble+0x1a>
 2ca:	08 95       	ret
 2cc:	83 34       	cpi	r24, 0x43	; 67
 2ce:	89 f0       	breq	.+34     	; 0x2f2 <DIO_write_high_nibble+0x36>
 2d0:	84 34       	cpi	r24, 0x44	; 68
 2d2:	b1 f0       	breq	.+44     	; 0x300 <DIO_write_high_nibble+0x44>
 2d4:	08 95       	ret
		{
			case 'A':
			PORTA&=0x0f;
 2d6:	8b b3       	in	r24, 0x1b	; 27
 2d8:	8f 70       	andi	r24, 0x0F	; 15
 2da:	8b bb       	out	0x1b, r24	; 27
			PORTA|=val;
 2dc:	8b b3       	in	r24, 0x1b	; 27
 2de:	68 2b       	or	r22, r24
 2e0:	6b bb       	out	0x1b, r22	; 27
			break;
 2e2:	08 95       	ret
			case 'B':
			PORTB&=0x0f;
 2e4:	88 b3       	in	r24, 0x18	; 24
 2e6:	8f 70       	andi	r24, 0x0F	; 15
 2e8:	88 bb       	out	0x18, r24	; 24
			PORTB|=val;
 2ea:	88 b3       	in	r24, 0x18	; 24
 2ec:	68 2b       	or	r22, r24
 2ee:	68 bb       	out	0x18, r22	; 24
			break;
 2f0:	08 95       	ret
			case 'C':
			PORTC&=0x0f;
 2f2:	85 b3       	in	r24, 0x15	; 21
 2f4:	8f 70       	andi	r24, 0x0F	; 15
 2f6:	85 bb       	out	0x15, r24	; 21
			PORTC|=val;
 2f8:	85 b3       	in	r24, 0x15	; 21
 2fa:	68 2b       	or	r22, r24
 2fc:	65 bb       	out	0x15, r22	; 21
			break;
 2fe:	08 95       	ret
			case 'D':
			PORTD&=0x0f;
 300:	82 b3       	in	r24, 0x12	; 18
 302:	8f 70       	andi	r24, 0x0F	; 15
 304:	82 bb       	out	0x12, r24	; 18
			PORTD|=val;
 306:	82 b3       	in	r24, 0x12	; 18
 308:	68 2b       	or	r22, r24
 30a:	62 bb       	out	0x12, r22	; 18
 30c:	08 95       	ret

0000030e <enable>:
	LCD_sendCommand(ENTRY_MODE);
	_delay_ms(1);
}

void enable(void){
	DIO_write('B',EN,1);
 30e:	41 e0       	ldi	r20, 0x01	; 1
 310:	60 e0       	ldi	r22, 0x00	; 0
 312:	82 e4       	ldi	r24, 0x42	; 66
 314:	0e 94 ee 00 	call	0x1dc	; 0x1dc <DIO_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 318:	8f e9       	ldi	r24, 0x9F	; 159
 31a:	9f e0       	ldi	r25, 0x0F	; 15
 31c:	01 97       	sbiw	r24, 0x01	; 1
 31e:	f1 f7       	brne	.-4      	; 0x31c <enable+0xe>
 320:	00 c0       	rjmp	.+0      	; 0x322 <enable+0x14>
 322:	00 00       	nop
	_delay_ms(2);
	DIO_write('B',EN,0);
 324:	40 e0       	ldi	r20, 0x00	; 0
 326:	60 e0       	ldi	r22, 0x00	; 0
 328:	82 e4       	ldi	r24, 0x42	; 66
 32a:	0e 94 ee 00 	call	0x1dc	; 0x1dc <DIO_write>
 32e:	8f e9       	ldi	r24, 0x9F	; 159
 330:	9f e0       	ldi	r25, 0x0F	; 15
 332:	01 97       	sbiw	r24, 0x01	; 1
 334:	f1 f7       	brne	.-4      	; 0x332 <enable+0x24>
 336:	00 c0       	rjmp	.+0      	; 0x338 <enable+0x2a>
 338:	00 00       	nop
 33a:	08 95       	ret

0000033c <LCD_sendCommand>:
	_delay_ms(2);
}

void LCD_sendCommand(char cmd){
 33c:	cf 93       	push	r28
 33e:	c8 2f       	mov	r28, r24
	DIO_write_high_nibble('A', cmd >> 4);
 340:	68 2f       	mov	r22, r24
 342:	62 95       	swap	r22
 344:	6f 70       	andi	r22, 0x0F	; 15
 346:	70 e0       	ldi	r23, 0x00	; 0
 348:	81 e4       	ldi	r24, 0x41	; 65
 34a:	0e 94 5e 01 	call	0x2bc	; 0x2bc <DIO_write_high_nibble>
	DIO_write('B', RS, 0);
 34e:	40 e0       	ldi	r20, 0x00	; 0
 350:	61 e0       	ldi	r22, 0x01	; 1
 352:	82 e4       	ldi	r24, 0x42	; 66
 354:	0e 94 ee 00 	call	0x1dc	; 0x1dc <DIO_write>
	enable();
 358:	0e 94 87 01 	call	0x30e	; 0x30e <enable>
	DIO_write_high_nibble('A', cmd);
 35c:	6c 2f       	mov	r22, r28
 35e:	70 e0       	ldi	r23, 0x00	; 0
 360:	81 e4       	ldi	r24, 0x41	; 65
 362:	0e 94 5e 01 	call	0x2bc	; 0x2bc <DIO_write_high_nibble>
	DIO_write('B', RS, 0);
 366:	40 e0       	ldi	r20, 0x00	; 0
 368:	61 e0       	ldi	r22, 0x01	; 1
 36a:	82 e4       	ldi	r24, 0x42	; 66
 36c:	0e 94 ee 00 	call	0x1dc	; 0x1dc <DIO_write>
	enable();
 370:	0e 94 87 01 	call	0x30e	; 0x30e <enable>
 374:	8f ec       	ldi	r24, 0xCF	; 207
 376:	97 e0       	ldi	r25, 0x07	; 7
 378:	01 97       	sbiw	r24, 0x01	; 1
 37a:	f1 f7       	brne	.-4      	; 0x378 <LCD_sendCommand+0x3c>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <LCD_sendCommand+0x42>
 37e:	00 00       	nop
	_delay_ms(1);
}
 380:	cf 91       	pop	r28
 382:	08 95       	ret

00000384 <LCD_init>:
 384:	2f ef       	ldi	r18, 0xFF	; 255
 386:	81 ee       	ldi	r24, 0xE1	; 225
 388:	94 e0       	ldi	r25, 0x04	; 4
 38a:	21 50       	subi	r18, 0x01	; 1
 38c:	80 40       	sbci	r24, 0x00	; 0
 38e:	90 40       	sbci	r25, 0x00	; 0
 390:	e1 f7       	brne	.-8      	; 0x38a <LCD_init+0x6>
 392:	00 c0       	rjmp	.+0      	; 0x394 <LCD_init+0x10>
 394:	00 00       	nop
// 	DIO_setpindir('A',1,1);
// 	DIO_setpindir('A',2,1);
// 	DIO_setpindir('A',3,1);

	_delay_ms(200);
	DIO_setpindir('A',4,1);
 396:	41 e0       	ldi	r20, 0x01	; 1
 398:	64 e0       	ldi	r22, 0x04	; 4
 39a:	81 e4       	ldi	r24, 0x41	; 65
 39c:	0e 94 7e 00 	call	0xfc	; 0xfc <DIO_setpindir>
	DIO_setpindir('A',5,1);
 3a0:	41 e0       	ldi	r20, 0x01	; 1
 3a2:	65 e0       	ldi	r22, 0x05	; 5
 3a4:	81 e4       	ldi	r24, 0x41	; 65
 3a6:	0e 94 7e 00 	call	0xfc	; 0xfc <DIO_setpindir>
	DIO_setpindir('A',6,1);
 3aa:	41 e0       	ldi	r20, 0x01	; 1
 3ac:	66 e0       	ldi	r22, 0x06	; 6
 3ae:	81 e4       	ldi	r24, 0x41	; 65
 3b0:	0e 94 7e 00 	call	0xfc	; 0xfc <DIO_setpindir>
	DIO_setpindir('A',7,1);
 3b4:	41 e0       	ldi	r20, 0x01	; 1
 3b6:	67 e0       	ldi	r22, 0x07	; 7
 3b8:	81 e4       	ldi	r24, 0x41	; 65
 3ba:	0e 94 7e 00 	call	0xfc	; 0xfc <DIO_setpindir>
	
	DIO_setpindir('B',EN,1);
 3be:	41 e0       	ldi	r20, 0x01	; 1
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	82 e4       	ldi	r24, 0x42	; 66
 3c4:	0e 94 7e 00 	call	0xfc	; 0xfc <DIO_setpindir>
	DIO_setpindir('B',RS,1);
 3c8:	41 e0       	ldi	r20, 0x01	; 1
 3ca:	61 e0       	ldi	r22, 0x01	; 1
 3cc:	82 e4       	ldi	r24, 0x42	; 66
 3ce:	0e 94 7e 00 	call	0xfc	; 0xfc <DIO_setpindir>
	DIO_setpindir('B',RW,1);
 3d2:	41 e0       	ldi	r20, 0x01	; 1
 3d4:	62 e0       	ldi	r22, 0x02	; 2
 3d6:	82 e4       	ldi	r24, 0x42	; 66
 3d8:	0e 94 7e 00 	call	0xfc	; 0xfc <DIO_setpindir>
	
	DIO_write('B',RW,0);
 3dc:	40 e0       	ldi	r20, 0x00	; 0
 3de:	62 e0       	ldi	r22, 0x02	; 2
 3e0:	82 e4       	ldi	r24, 0x42	; 66
 3e2:	0e 94 ee 00 	call	0x1dc	; 0x1dc <DIO_write>
	
	LCD_sendCommand(RETURN_HOME);
 3e6:	82 e0       	ldi	r24, 0x02	; 2
 3e8:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_sendCommand>
 3ec:	8f e1       	ldi	r24, 0x1F	; 31
 3ee:	9e e4       	ldi	r25, 0x4E	; 78
 3f0:	01 97       	sbiw	r24, 0x01	; 1
 3f2:	f1 f7       	brne	.-4      	; 0x3f0 <LCD_init+0x6c>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <LCD_init+0x72>
 3f6:	00 00       	nop
	_delay_ms(10);
	
	LCD_sendCommand(FOUR_BITS);
 3f8:	88 e2       	ldi	r24, 0x28	; 40
 3fa:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_sendCommand>
 3fe:	8f ec       	ldi	r24, 0xCF	; 207
 400:	97 e0       	ldi	r25, 0x07	; 7
 402:	01 97       	sbiw	r24, 0x01	; 1
 404:	f1 f7       	brne	.-4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 406:	00 c0       	rjmp	.+0      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 408:	00 00       	nop
	_delay_ms(1);
	
	LCD_sendCommand(CURSOR_ON_DISPLAN_ON);
 40a:	8e e0       	ldi	r24, 0x0E	; 14
 40c:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_sendCommand>
 410:	8f ec       	ldi	r24, 0xCF	; 207
 412:	97 e0       	ldi	r25, 0x07	; 7
 414:	01 97       	sbiw	r24, 0x01	; 1
 416:	f1 f7       	brne	.-4      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 418:	00 c0       	rjmp	.+0      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 41a:	00 00       	nop
	_delay_ms(1);

	LCD_sendCommand(CLR_Screen);
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_sendCommand>
 422:	8f ec       	ldi	r24, 0xCF	; 207
 424:	97 e0       	ldi	r25, 0x07	; 7
 426:	01 97       	sbiw	r24, 0x01	; 1
 428:	f1 f7       	brne	.-4      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 42c:	00 00       	nop
	_delay_ms(1);

	LCD_sendCommand(ENTRY_MODE);
 42e:	86 e0       	ldi	r24, 0x06	; 6
 430:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_sendCommand>
 434:	8f ec       	ldi	r24, 0xCF	; 207
 436:	97 e0       	ldi	r25, 0x07	; 7
 438:	01 97       	sbiw	r24, 0x01	; 1
 43a:	f1 f7       	brne	.-4      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 43c:	00 c0       	rjmp	.+0      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 43e:	00 00       	nop
 440:	08 95       	ret

00000442 <LCD_sendChar>:
	DIO_write('B', RS, 0);
	enable();
	_delay_ms(1);
}

void LCD_sendChar(char data){
 442:	cf 93       	push	r28
 444:	c8 2f       	mov	r28, r24
	DIO_write_high_nibble('A', data >> 4);
 446:	68 2f       	mov	r22, r24
 448:	62 95       	swap	r22
 44a:	6f 70       	andi	r22, 0x0F	; 15
 44c:	70 e0       	ldi	r23, 0x00	; 0
 44e:	81 e4       	ldi	r24, 0x41	; 65
 450:	0e 94 5e 01 	call	0x2bc	; 0x2bc <DIO_write_high_nibble>
	DIO_write('B', RS, 1);
 454:	41 e0       	ldi	r20, 0x01	; 1
 456:	61 e0       	ldi	r22, 0x01	; 1
 458:	82 e4       	ldi	r24, 0x42	; 66
 45a:	0e 94 ee 00 	call	0x1dc	; 0x1dc <DIO_write>
	enable();
 45e:	0e 94 87 01 	call	0x30e	; 0x30e <enable>
	DIO_write_high_nibble('A', data);
 462:	6c 2f       	mov	r22, r28
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	81 e4       	ldi	r24, 0x41	; 65
 468:	0e 94 5e 01 	call	0x2bc	; 0x2bc <DIO_write_high_nibble>
	DIO_write('B', RS, 1);
 46c:	41 e0       	ldi	r20, 0x01	; 1
 46e:	61 e0       	ldi	r22, 0x01	; 1
 470:	82 e4       	ldi	r24, 0x42	; 66
 472:	0e 94 ee 00 	call	0x1dc	; 0x1dc <DIO_write>
	enable();
 476:	0e 94 87 01 	call	0x30e	; 0x30e <enable>
 47a:	8f ec       	ldi	r24, 0xCF	; 207
 47c:	97 e0       	ldi	r25, 0x07	; 7
 47e:	01 97       	sbiw	r24, 0x01	; 1
 480:	f1 f7       	brne	.-4      	; 0x47e <LCD_sendChar+0x3c>
 482:	00 c0       	rjmp	.+0      	; 0x484 <LCD_sendChar+0x42>
 484:	00 00       	nop
	_delay_ms(1);
}
 486:	cf 91       	pop	r28
 488:	08 95       	ret

0000048a <LCD_clearScreen>:

void LCD_clearScreen(){
	LCD_sendCommand(0x01);
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_sendCommand>
 490:	8f e1       	ldi	r24, 0x1F	; 31
 492:	9e e4       	ldi	r25, 0x4E	; 78
 494:	01 97       	sbiw	r24, 0x01	; 1
 496:	f1 f7       	brne	.-4      	; 0x494 <LCD_clearScreen+0xa>
 498:	00 c0       	rjmp	.+0      	; 0x49a <LCD_clearScreen+0x10>
 49a:	00 00       	nop
 49c:	08 95       	ret

0000049e <main>:
#include "usart.h"
#include "lcd_driver.h"

int main(void)
{	
	LCD_init();
 49e:	0e 94 c2 01 	call	0x384	; 0x384 <LCD_init>
	UART_init(9600);
 4a2:	60 e8       	ldi	r22, 0x80	; 128
 4a4:	75 e2       	ldi	r23, 0x25	; 37
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	0e 94 5e 02 	call	0x4bc	; 0x4bc <UART_init>
	
	
	unsigned char received;
	LCD_clearScreen();
 4ae:	0e 94 45 02 	call	0x48a	; 0x48a <LCD_clearScreen>
   while (1)
   {
	   received = UART_receive();
 4b2:	0e 94 81 02 	call	0x502	; 0x502 <UART_receive>
	   LCD_sendChar(received);
 4b6:	0e 94 21 02 	call	0x442	; 0x442 <LCD_sendChar>
 4ba:	fb cf       	rjmp	.-10     	; 0x4b2 <main+0x14>

000004bc <UART_init>:
	UCSRC=(1<<URSEL)|(1<<UCSZ0)|(1<<UCSZ1);
}

void UART_send_data(char data){
	while(READ_BIT(UCSRA,UDRE) == 0);
	UDR = data;
 4bc:	dc 01       	movw	r26, r24
 4be:	cb 01       	movw	r24, r22
 4c0:	88 0f       	add	r24, r24
 4c2:	99 1f       	adc	r25, r25
 4c4:	aa 1f       	adc	r26, r26
 4c6:	bb 1f       	adc	r27, r27
 4c8:	88 0f       	add	r24, r24
 4ca:	99 1f       	adc	r25, r25
 4cc:	aa 1f       	adc	r26, r26
 4ce:	bb 1f       	adc	r27, r27
 4d0:	9c 01       	movw	r18, r24
 4d2:	ad 01       	movw	r20, r26
 4d4:	22 0f       	add	r18, r18
 4d6:	33 1f       	adc	r19, r19
 4d8:	44 1f       	adc	r20, r20
 4da:	55 1f       	adc	r21, r21
 4dc:	22 0f       	add	r18, r18
 4de:	33 1f       	adc	r19, r19
 4e0:	44 1f       	adc	r20, r20
 4e2:	55 1f       	adc	r21, r21
 4e4:	60 e0       	ldi	r22, 0x00	; 0
 4e6:	72 e1       	ldi	r23, 0x12	; 18
 4e8:	8a e7       	ldi	r24, 0x7A	; 122
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	0e 94 85 02 	call	0x50a	; 0x50a <__udivmodsi4>
 4f0:	21 50       	subi	r18, 0x01	; 1
 4f2:	31 09       	sbc	r19, r1
 4f4:	30 bd       	out	0x20, r19	; 32
 4f6:	29 b9       	out	0x09, r18	; 9
 4f8:	53 9a       	sbi	0x0a, 3	; 10
 4fa:	54 9a       	sbi	0x0a, 4	; 10
 4fc:	86 e8       	ldi	r24, 0x86	; 134
 4fe:	80 bd       	out	0x20, r24	; 32
 500:	08 95       	ret

00000502 <UART_receive>:
}

char UART_receive(void){
	while(READ_BIT(UCSRA,RXC) == 0);
 502:	5f 9b       	sbis	0x0b, 7	; 11
 504:	fe cf       	rjmp	.-4      	; 0x502 <UART_receive>
	return UDR;
 506:	8c b1       	in	r24, 0x0c	; 12
}
 508:	08 95       	ret

0000050a <__udivmodsi4>:
 50a:	a1 e2       	ldi	r26, 0x21	; 33
 50c:	1a 2e       	mov	r1, r26
 50e:	aa 1b       	sub	r26, r26
 510:	bb 1b       	sub	r27, r27
 512:	fd 01       	movw	r30, r26
 514:	0d c0       	rjmp	.+26     	; 0x530 <__udivmodsi4_ep>

00000516 <__udivmodsi4_loop>:
 516:	aa 1f       	adc	r26, r26
 518:	bb 1f       	adc	r27, r27
 51a:	ee 1f       	adc	r30, r30
 51c:	ff 1f       	adc	r31, r31
 51e:	a2 17       	cp	r26, r18
 520:	b3 07       	cpc	r27, r19
 522:	e4 07       	cpc	r30, r20
 524:	f5 07       	cpc	r31, r21
 526:	20 f0       	brcs	.+8      	; 0x530 <__udivmodsi4_ep>
 528:	a2 1b       	sub	r26, r18
 52a:	b3 0b       	sbc	r27, r19
 52c:	e4 0b       	sbc	r30, r20
 52e:	f5 0b       	sbc	r31, r21

00000530 <__udivmodsi4_ep>:
 530:	66 1f       	adc	r22, r22
 532:	77 1f       	adc	r23, r23
 534:	88 1f       	adc	r24, r24
 536:	99 1f       	adc	r25, r25
 538:	1a 94       	dec	r1
 53a:	69 f7       	brne	.-38     	; 0x516 <__udivmodsi4_loop>
 53c:	60 95       	com	r22
 53e:	70 95       	com	r23
 540:	80 95       	com	r24
 542:	90 95       	com	r25
 544:	9b 01       	movw	r18, r22
 546:	ac 01       	movw	r20, r24
 548:	bd 01       	movw	r22, r26
 54a:	cf 01       	movw	r24, r30
 54c:	08 95       	ret

0000054e <__tablejump2__>:
 54e:	ee 0f       	add	r30, r30
 550:	ff 1f       	adc	r31, r31
 552:	05 90       	lpm	r0, Z+
 554:	f4 91       	lpm	r31, Z
 556:	e0 2d       	mov	r30, r0
 558:	09 94       	ijmp

0000055a <_exit>:
 55a:	f8 94       	cli

0000055c <__stop_program>:
 55c:	ff cf       	rjmp	.-2      	; 0x55c <__stop_program>
